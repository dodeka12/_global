<DocXmlTemplates>
		<!--
			Templates for Documentation Xml Comment blocks
			==============================================
			These control which entries are added to the doc-comment for each type of code element,
			and their order.
			
			Full documentation can be found here:
				http://www.atomineerutils.com/rulesguide.php
		-->

		<!-- StyleCop-compatible Xml-based file header.
			 Note that this uses &lt; and &gt; so that it will be treated as plain text rather than XML
		-->

		<file stylecop="true">
			// &lt;copyright file="%leafname%%extension%" company="%company%"&gt;
			// %copyright%
			// &lt;/copyright&gt;
			// &lt;author&gt;%user%&lt;/author&gt;
			// &lt;date&gt;%date%&lt;/date&gt;
			// &lt;summary&gt;%fileDescription%&lt;/summary&gt;
		</file>

		<!-- Catch-all plain-text Atomineer headers. See below for other examples -->
		<file>
			// project:   %project%
			// file:      %projectpathname%
			//
			// summary:   %fileDescription%
			//
			//            %copyright%
			//
            //            This file is part of the CluTecLib library.
            //
            //            The CluTecLib library is free software: you can redistribute it and / or modify
            //            it under the terms of the GNU Lesser General Public License as published by
            //            the Free Software Foundation, either version 3 of the License, or
            //            (at your option) any later version.
            //
            //            The CluTecLib library is distributed in the hope that it will be useful,
            //            but WITHOUT ANY WARRANTY; without even the implied warranty of
            //            MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
            //            GNU Lesser General Public License for more details.
            //
            //            You should have received a copy of the GNU Lesser General Public License
            //            along with the CluTecLib library. 
            //            If not, see &lt;http://www.gnu.org/licenses/&gt;.
            // 
		</file>

		<file-vb _separators="false">
			'---------------------------------------------------------------------------------------------------
			' file:		%projectpathname%
			'
			' summary:	%fileDescription%
			'---------------------------------------------------------------------------------------------------
		</file-vb>

		<!-- Special header and footer pair for .h and .hpp files, which will automatically add an
		     include-once mechanism to the file.

		<file _filetypes=".h.hpp" _addfooter="true" _separators="false">
			// file:	%projectpathname%
			//
			// summary:	%fileDescription%

			#ifndef INC_%leafname%_H
			#define INC_%leafname%_H

		</file>
		<filefooter filetypes=".h.hpp" _separators="false">
			// end of %projectpathname%
			#endif	// INC_%leafname%_H
		</filefooter>
		-->

		<!-- Free-form text file header example
		<file>
			// project:	%project%
			// file:	%projectpathname%
			//
			// summary:	%fileDescription%
			//
			//			%copyright%
			//
			//			Date		Developer		Change
			//			%date%	%user%	Created
		</file>
		-->

		<!-- XML comment example
		<file>
			<prototype>%projectpathname%</prototype>
			<_/>
			<summary/>
		</file>
		-->

		<!-- Catch-all plain-text file footers. These follow the same form as the file headers above -->
		<filefooter>
			// End of %projectpathname%
		</filefooter>

		<filefooter-vb _separators="false">
			'---------------------------------------------------------------------------------------------------
			' End of %projectpathname%
		</filefooter-vb>


		<!--
			Comment template for catch-all comments. These are added when the filetype of the document
			is not one of the core languages that Atomineer can parse to auto-document. The separators
			and line headers used for each file extension (e.g. .html, .sql) are configured in your
			Prefs.xml, allowing AtomineerUtils to correctly insert simple "boilerplate" comments into
			any file format.
		-->
		<catchall>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
		</catchall>

		<!--
			Default namespace comment. As with file comments, you can use plain-text or XML commenting for
			this entry.
		-->
		<namespace>
			// namespace: %name%
			//
			// summary:	%namespaceDescription%
		</namespace>

		<!-- Example XML namespace comment.
		<namespace>
			<prototype/>
			<_/>
			<summary/>
		</namespace>
		-->

		<typedef>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</typedef>

		<enum>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</enum>

		<bitfield>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</bitfield>

		<struct>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<param />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</struct>

		<union>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</union>

		<class>
			<summary />
			<_ />
			<content _optional="true" />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<param />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</class>

		<interface>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<param />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</interface>

		<module>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<param />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</module>

		<def>				<!-- C/C++ #define macro -->
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<param />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</def>

		<method>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<returns />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</method>

		<property>
			<summary />
			<_ />
			<remarks _optional="true" />
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<value />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</property>

		<indexer>
			<summary />
			<_ />
			<remarks _optional="true" />
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<returns />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</indexer>

		<delegate>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<returns />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</delegate>

		<constructor>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</constructor>

		<destructor>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</destructor>

		<finaliser>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</finaliser>

		<operator>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<returns />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</operator>

		<eventhandler>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<returns />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</eventhandler>

		<eventsender>
			<summary />
			<_ />
			<remarks>%user%, %date%</remarks>
			<_ />
			<exception />
			<_ />
			<param />
			<_ />
			<returns />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</eventsender>

		<!-- Template for member variables -->
		<member>
			<summary />
			<_ />
			<inheritdoc _punctuate="false" _optional="true" />
		</member>

		<!-- Templates for methods in abstract classes and interfaces -->
		<interfacemethod>
			<summary />
			<_ />
			<remarks _optional="true" />
			<_ />
			<param />
			<_ />
			<returns />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</interfacemethod>

		<interfaceproperty>
			<summary />
			<_ />
			<remarks _optional="true" />
			<_ />
			<value />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</interfaceproperty>

		<interfaceindexer>
			<summary />
			<_ />
			<remarks _optional="true" />
			<_ />
			<param />
			<_ />
			<returns />
			<_ />
			<example _punctuate="false" _optional="true" />
			<_ />
			<seealso _punctuate="false" _optional="true" />
			<inheritdoc _punctuate="false" _optional="true" />
		</interfaceindexer>

	</DocXmlTemplates>